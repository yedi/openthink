{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name dommy.utils, :imports nil, :requires nil, :uses nil, :defs {dissoc-in {:protocol-inline nil, :meta {:file "/Users/yedianyansi/Documents/workshop/openthink/client/../server/static/out/dommy/utils.cljs", :line 3, :column 7, :end-line 3, :end-column 16, :arglists (quote ([m [k & ks]])), :doc "Dissociate this keyseq from m, removing any empty maps created as a result\n   (including at the top-level)."}, :name dommy.utils/dissoc-in, :variadic false, :file "../server/static/out/dommy/utils.cljs", :end-column 16, :method-params ([m p__42633]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 3, :end-line 3, :max-fixed-arity 2, :fn-var true, :arglists (quote ([m [k & ks]])), :doc "Dissociate this keyseq from m, removing any empty maps created as a result\n   (including at the top-level)."}, ->Array {:protocol-inline nil, :meta {:file "/Users/yedianyansi/Documents/workshop/openthink/client/../server/static/out/dommy/utils.cljs", :line 14, :column 7, :end-line 14, :end-column 14, :arglists (quote ([array-like]))}, :name dommy.utils/->Array, :variadic false, :file "../server/static/out/dommy/utils.cljs", :end-column 14, :method-params ([array-like]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([array-like]))}, as-str {:protocol-inline nil, :meta {:file "/Users/yedianyansi/Documents/workshop/openthink/client/../server/static/out/dommy/utils.cljs", :line 17, :column 7, :end-line 17, :end-column 13, :arglists (quote ([s])), :doc "Coerces strings and keywords to strings, while preserving namespace of\n   namespaced keywords"}, :name dommy.utils/as-str, :variadic false, :file "../server/static/out/dommy/utils.cljs", :end-column 13, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :doc "Coerces strings and keywords to strings, while preserving namespace of\n   namespaced keywords"}}, :require-macros nil, :doc nil}