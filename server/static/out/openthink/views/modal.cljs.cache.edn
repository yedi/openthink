{:rename-macros {}, :renames {}, :use-macros {sel1 dommy.macros, html sablono.core, go cljs.core.async.macros, alt! cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name openthink.views.modal, :imports nil, :requires {ajax.core ajax.core, openthink.state openthink.state, html sablono.core, openthink.views.auth openthink.views.auth, cljs.core.async cljs.core.async, openthink.cursors openthink.cursors, sablono.core sablono.core, util openthink.utils, openthink.utils openthink.utils, auth openthink.views.auth, om.core om.core, curs openthink.cursors, om om.core, str clojure.string, clojure.string clojure.string, openthink.views.editor openthink.views.editor, editor openthink.views.editor}, :uses {POST ajax.core, <! cljs.core.async, chan cljs.core.async, >! cljs.core.async, app-state openthink.state, GET ajax.core, put! cljs.core.async, take! cljs.core.async}, :defs {t_openthink$views$modal45020 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name openthink.views.modal/t_openthink$views$modal45020, :file "src/openthink/views/modal.cljs", :type true, :anonymous true, :column 3, :line 124, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_openthink$views$modal44878 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([data owner p__44875 map__44876 opts close-chan meta44879])), :file nil}, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name openthink.views.modal/->t_openthink$views$modal44878, :variadic false, :file "src/openthink/views/modal.cljs", :method-params ([data owner p__44875 map__44876 opts close-chan meta44879]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 75, :max-fixed-arity 7, :fn-var true, :arglists (quote ([data owner p__44875 map__44876 opts close-chan meta44879])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_openthink$views$modal44945 {:num-fields 7, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name openthink.views.modal/t_openthink$views$modal44945, :file "src/openthink/views/modal.cljs", :type true, :anonymous true, :column 3, :line 75, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_openthink$views$modal44704 {:num-fields 7, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name openthink.views.modal/t_openthink$views$modal44704, :file "src/openthink/views/modal.cljs", :type true, :anonymous true, :column 3, :line 21, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, close-modal {:protocol-inline nil, :meta {:file "/Users/yedianyansi/Documents/workshop/openthink/client/src/openthink/views/modal.cljs", :line 168, :column 7, :end-line 168, :end-column 18, :arglists (quote ([]))}, :name openthink.views.modal/close-modal, :variadic false, :file "src/openthink/views/modal.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 168, :end-line 168, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, ->t_openthink$views$modal45031 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([data owner meta45032])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name openthink.views.modal/->t_openthink$views$modal45031, :variadic false, :file "src/openthink/views/modal.cljs", :method-params ([data owner meta45032]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 159, :max-fixed-arity 3, :fn-var true, :arglists (quote ([data owner meta45032])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_openthink$views$modal44782 {:num-fields 7, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name openthink.views.modal/t_openthink$views$modal44782, :file "src/openthink/views/modal.cljs", :type true, :anonymous true, :column 3, :line 21, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_openthink$views$modal44704 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([data owner p__44701 map__44702 opts close-chan meta44705])), :file nil}, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name openthink.views.modal/->t_openthink$views$modal44704, :variadic false, :file "src/openthink/views/modal.cljs", :method-params ([data owner p__44701 map__44702 opts close-chan meta44705]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 21, :max-fixed-arity 7, :fn-var true, :arglists (quote ([data owner p__44701 map__44702 opts close-chan meta44705])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, post-reply-section {:protocol-inline nil, :meta {:file "/Users/yedianyansi/Documents/workshop/openthink/client/src/openthink/views/modal.cljs", :line 123, :column 7, :end-line 123, :end-column 25, :arglists (quote ([data owner opts]))}, :name openthink.views.modal/post-reply-section, :variadic false, :file "src/openthink/views/modal.cljs", :end-column 25, :method-params ([data owner opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 123, :end-line 123, :max-fixed-arity 3, :fn-var true, :arglists (quote ([data owner opts]))}, ask-for {:protocol-inline nil, :meta {:file "/Users/yedianyansi/Documents/workshop/openthink/client/src/openthink/views/modal.cljs", :line 15, :column 7, :end-line 15, :end-column 14, :arglists (quote ([list-of-wants params]))}, :name openthink.views.modal/ask-for, :variadic false, :file "src/openthink/views/modal.cljs", :end-column 14, :method-params ([list-of-wants params]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 2, :fn-var true, :arglists (quote ([list-of-wants params]))}, ->t_openthink$views$modal45084 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([cursor owner p__45036 map__45082 modal-view meta45085])), :file nil}, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name openthink.views.modal/->t_openthink$views$modal45084, :variadic false, :file "src/openthink/views/modal.cljs", :method-params ([cursor owner p__45036 map__45082 modal-view meta45085]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 176, :max-fixed-arity 6, :fn-var true, :arglists (quote ([cursor owner p__45036 map__45082 modal-view meta45085])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_openthink$views$modal45023 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name openthink.views.modal/t_openthink$views$modal45023, :file "src/openthink/views/modal.cljs", :type true, :anonymous true, :column 3, :line 124, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_openthink$views$modal45026 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([data owner meta45027])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name openthink.views.modal/->t_openthink$views$modal45026, :variadic false, :file "src/openthink/views/modal.cljs", :method-params ([data owner meta45027]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 159, :max-fixed-arity 3, :fn-var true, :arglists (quote ([data owner meta45027])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, modal {:protocol-inline nil, :meta {:file "/Users/yedianyansi/Documents/workshop/openthink/client/src/openthink/views/modal.cljs", :line 172, :column 7, :end-line 172, :end-column 12, :arglists (quote ([cursor owner {:keys [modal-view]}])), :doc "reusable modal component.\n  modal-view is the component that should be rendered as a modal"}, :name openthink.views.modal/modal, :variadic false, :file "src/openthink/views/modal.cljs", :end-column 12, :method-params ([cursor owner p__45036]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 172, :end-line 172, :max-fixed-arity 3, :fn-var true, :arglists (quote ([cursor owner {:keys [modal-view]}])), :doc "reusable modal component.\n  modal-view is the component that should be rendered as a modal"}, submit-form {:protocol-inline nil, :meta {:file "/Users/yedianyansi/Documents/workshop/openthink/client/src/openthink/views/modal.cljs", :line 20, :column 7, :end-line 20, :end-column 18, :arglists (quote ([data owner {:keys [close-chan], :as opts}]))}, :name openthink.views.modal/submit-form, :variadic false, :file "src/openthink/views/modal.cljs", :end-column 18, :method-params ([data owner p__44701]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 3, :fn-var true, :arglists (quote ([data owner {:keys [close-chan], :as opts}]))}, t_openthink$views$modal45026 {:num-fields 3, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name openthink.views.modal/t_openthink$views$modal45026, :file "src/openthink/views/modal.cljs", :type true, :anonymous true, :column 3, :line 159, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_openthink$views$modal45039 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([cursor owner p__45036 map__45037 modal-view meta45040])), :file nil}, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name openthink.views.modal/->t_openthink$views$modal45039, :variadic false, :file "src/openthink/views/modal.cljs", :method-params ([cursor owner p__45036 map__45037 modal-view meta45040]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 176, :max-fixed-arity 6, :fn-var true, :arglists (quote ([cursor owner p__45036 map__45037 modal-view meta45040])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, basic-modal {:protocol-inline nil, :meta {:file "/Users/yedianyansi/Documents/workshop/openthink/client/src/openthink/views/modal.cljs", :line 158, :column 7, :end-line 158, :end-column 18, :arglists (quote ([data owner]))}, :name openthink.views.modal/basic-modal, :variadic false, :file "src/openthink/views/modal.cljs", :end-column 18, :method-params ([data owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 158, :end-line 158, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data owner]))}, ->t_openthink$views$modal45023 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([data owner opts meta45024])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name openthink.views.modal/->t_openthink$views$modal45023, :variadic false, :file "src/openthink/views/modal.cljs", :method-params ([data owner opts meta45024]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 124, :max-fixed-arity 4, :fn-var true, :arglists (quote ([data owner opts meta45024])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, link-form {:protocol-inline nil, :meta {:file "/Users/yedianyansi/Documents/workshop/openthink/client/src/openthink/views/modal.cljs", :line 74, :column 7, :end-line 74, :end-column 16, :arglists (quote ([data owner {:keys [close-chan], :as opts}]))}, :name openthink.views.modal/link-form, :variadic false, :file "src/openthink/views/modal.cljs", :end-column 16, :method-params ([data owner p__44875]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 74, :end-line 74, :max-fixed-arity 3, :fn-var true, :arglists (quote ([data owner {:keys [close-chan], :as opts}]))}, t_openthink$views$modal45039 {:num-fields 6, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name openthink.views.modal/t_openthink$views$modal45039, :file "src/openthink/views/modal.cljs", :type true, :anonymous true, :column 3, :line 176, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_openthink$views$modal45020 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([data owner opts meta45021])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name openthink.views.modal/->t_openthink$views$modal45020, :variadic false, :file "src/openthink/views/modal.cljs", :method-params ([data owner opts meta45021]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 124, :max-fixed-arity 4, :fn-var true, :arglists (quote ([data owner opts meta45021])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, modal-map {:name openthink.views.modal/modal-map, :file "src/openthink/views/modal.cljs", :line 164, :column 1, :end-line 164, :end-column 15, :meta {:file "/Users/yedianyansi/Documents/workshop/openthink/client/src/openthink/views/modal.cljs", :line 164, :column 6, :end-line 164, :end-column 15}}, t_openthink$views$modal45031 {:num-fields 3, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name openthink.views.modal/t_openthink$views$modal45031, :file "src/openthink/views/modal.cljs", :type true, :anonymous true, :column 3, :line 159, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_openthink$views$modal44945 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([data owner p__44875 map__44943 opts close-chan meta44946])), :file nil}, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name openthink.views.modal/->t_openthink$views$modal44945, :variadic false, :file "src/openthink/views/modal.cljs", :method-params ([data owner p__44875 map__44943 opts close-chan meta44946]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 75, :max-fixed-arity 7, :fn-var true, :arglists (quote ([data owner p__44875 map__44943 opts close-chan meta44946])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_openthink$views$modal44782 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([data owner p__44701 map__44780 opts close-chan meta44783])), :file nil}, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name openthink.views.modal/->t_openthink$views$modal44782, :variadic false, :file "src/openthink/views/modal.cljs", :method-params ([data owner p__44701 map__44780 opts close-chan meta44783]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 21, :max-fixed-arity 7, :fn-var true, :arglists (quote ([data owner p__44701 map__44780 opts close-chan meta44783])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_openthink$views$modal44878 {:num-fields 7, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name openthink.views.modal/t_openthink$views$modal44878, :file "src/openthink/views/modal.cljs", :type true, :anonymous true, :column 3, :line 75, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_openthink$views$modal45084 {:num-fields 6, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name openthink.views.modal/t_openthink$views$modal45084, :file "src/openthink/views/modal.cljs", :type true, :anonymous true, :column 3, :line 176, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, dommy.macros dommy.macros, html sablono.core, sablono.core sablono.core}, :cljs.analyzer/constants {:seen #{:submit-chan meta44783 p__45036 :hr meta45040 map__44876 :ready :dd :modal-view meta44705 owner :placeholder :close-chan data :else meta45027 :strong :dt meta44946 :response-format map__44780 :params modal-view :reply-type :recur close-chan :init-state :state meta45024 :modal :className :title map__45082 :small :div :h4 :rels :new-post meta45032 :link_ids map__44702 :transit cursor :register :link :id meta45021 :opts map__45037 :post p__44701 :basic :reply-to :error :new_rel_ids :br p__44875 map__44943 :posts opts :handler :user :on-change-fn :onClick :href meta44879 :a :dl :posting :text meta45085}, :order [:id :close-chan :submit-chan :title :text :error :state :ready :posting :response-format :params :handler :reply-to :recur :transit :else :div :className :init-state :placeholder :on-change-fn data owner p__44701 map__44702 opts close-chan meta44705 map__44780 meta44783 :link :rels :posts :link_ids :new_rel_ids p__44875 map__44876 meta44879 map__44943 meta44946 :reply-type :post :user :h4 :a :href :onClick :modal :register :strong :small :hr :br :dl :dt :dd :opts meta45021 meta45024 meta45027 meta45032 :basic :new-post :modal-view cursor p__45036 map__45037 modal-view meta45040 map__45082 meta45085]}, :doc nil}