{:rename-macros {}, :renames {}, :use-macros {html sablono.core, go cljs.core.async.macros, alt! cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name openthink.views.editor, :imports nil, :requires {cljs.core.async cljs.core.async, ajax.core ajax.core, om om.core, om.core om.core, html sablono.core, sablono.core sablono.core, markdown.core markdown.core, util openthink.utils, openthink.utils openthink.utils}, :uses {POST ajax.core, <! cljs.core.async, md->html markdown.core, chan cljs.core.async, >! cljs.core.async, GET ajax.core, put! cljs.core.async, take! cljs.core.async}, :defs {set-toggle {:protocol-inline nil, :meta {:file "/Users/yedianyansi/Documents/workshop/openthink/client/src/openthink/views/editor.cljs", :line 10, :column 7, :end-line 10, :end-column 17, :arglists (quote ([s v]))}, :name openthink.views.editor/set-toggle, :variadic false, :file "src/openthink/views/editor.cljs", :end-column 17, :method-params ([s v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 2, :fn-var true, :arglists (quote ([s v]))}, icon-map {:name openthink.views.editor/icon-map, :file "src/openthink/views/editor.cljs", :line 13, :column 1, :end-line 13, :end-column 14, :meta {:file "/Users/yedianyansi/Documents/workshop/openthink/client/src/openthink/views/editor.cljs", :line 13, :column 6, :end-line 13, :end-column 14}}, btn-fns {:name openthink.views.editor/btn-fns, :file "src/openthink/views/editor.cljs", :line 16, :column 1, :end-line 16, :end-column 13, :meta {:file "/Users/yedianyansi/Documents/workshop/openthink/client/src/openthink/views/editor.cljs", :line 16, :column 6, :end-line 16, :end-column 13}}, editor-view {:protocol-inline nil, :meta {:file "/Users/yedianyansi/Documents/workshop/openthink/client/src/openthink/views/editor.cljs", :line 18, :column 7, :end-line 18, :end-column 18, :arglists (quote ([data owner]))}, :name openthink.views.editor/editor-view, :variadic false, :file "src/openthink/views/editor.cljs", :end-column 18, :method-params ([data owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data owner]))}, t_openthink$views$editor44572 {:num-fields 3, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name openthink.views.editor/t_openthink$views$editor44572, :file "src/openthink/views/editor.cljs", :type true, :anonymous true, :column 3, :line 19, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_openthink$views$editor44572 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([data owner meta44573])), :file nil}, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name openthink.views.editor/->t_openthink$views$editor44572, :variadic false, :file "src/openthink/views/editor.cljs", :method-params ([data owner meta44573]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 19, :max-fixed-arity 3, :fn-var true, :arglists (quote ([data owner meta44573])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_openthink$views$editor44628 {:num-fields 3, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name openthink.views.editor/t_openthink$views$editor44628, :file "src/openthink/views/editor.cljs", :type true, :anonymous true, :column 3, :line 19, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_openthink$views$editor44628 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([data owner meta44629])), :file nil}, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name openthink.views.editor/->t_openthink$views$editor44628, :variadic false, :file "src/openthink/views/editor.cljs", :method-params ([data owner meta44629]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 19, :max-fixed-arity 3, :fn-var true, :arglists (quote ([data owner meta44629])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, html sablono.core, sablono.core sablono.core}, :cljs.analyzer/constants {:seen #{:bold meta44573 :dd owner :selected :placeholder data :else :strong :value :recur :icon :className :textarea :div :preview :btn-chan :target :onChange :btn :italic :p :on-change-fn :i :onClick :href :a :dangerouslySetInnerHTML :dl meta44629 :text}, :order [:btn :icon :preview :btn-chan :placeholder :selected :bold :italic :recur :else :text :div :dl :className :dd :a :href :onClick :i :target :textarea :value :onChange :on-change-fn :strong :p :dangerouslySetInnerHTML data owner meta44573 meta44629]}, :doc nil}