{:rename-macros {}, :renames {}, :use-macros {html sablono.core}, :excludes #{}, :name openthink.views.post, :imports nil, :requires {markdown.core markdown.core, html sablono.core, openthink.cursors openthink.cursors, sablono.core sablono.core, util openthink.utils, openthink.utils openthink.utils, om.core om.core, curs openthink.cursors, om om.core, openthink.views.activity openthink.views.activity}, :uses {md->html markdown.core, actions-view openthink.views.activity}, :defs {post-section {:protocol-inline nil, :meta {:file "/Users/yedianyansi/Documents/workshop/openthink/client/src/openthink/views/post.cljs", :line 20, :column 7, :end-line 20, :end-column 19, :arglists (quote ([data owner]))}, :name openthink.views.post/post-section, :variadic false, :file "src/openthink/views/post.cljs", :end-column 19, :method-params ([data owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data owner]))}, ->t_openthink$views$post45663 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([data owner meta45664])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name openthink.views.post/->t_openthink$views$post45663, :variadic false, :file "src/openthink/views/post.cljs", :method-params ([data owner meta45664]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 10, :max-fixed-arity 3, :fn-var true, :arglists (quote ([data owner meta45664])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_openthink$views$post45679 {:num-fields 3, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name openthink.views.post/t_openthink$views$post45679, :file "src/openthink/views/post.cljs", :type true, :anonymous true, :column 3, :line 21, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_openthink$views$post45679 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([data owner meta45680])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name openthink.views.post/->t_openthink$views$post45679, :variadic false, :file "src/openthink/views/post.cljs", :method-params ([data owner meta45680]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 21, :max-fixed-arity 3, :fn-var true, :arglists (quote ([data owner meta45680])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, post-view {:protocol-inline nil, :meta {:file "/Users/yedianyansi/Documents/workshop/openthink/client/src/openthink/views/post.cljs", :line 9, :column 7, :end-line 9, :end-column 16, :arglists (quote ([data owner]))}, :name openthink.views.post/post-view, :variadic false, :file "src/openthink/views/post.cljs", :end-column 16, :method-params ([data owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data owner]))}, ->t_openthink$views$post45671 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([data owner meta45672])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name openthink.views.post/->t_openthink$views$post45671, :variadic false, :file "src/openthink/views/post.cljs", :method-params ([data owner meta45672]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 10, :max-fixed-arity 3, :fn-var true, :arglists (quote ([data owner meta45672])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_openthink$views$post45682 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([data owner meta45683])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name openthink.views.post/->t_openthink$views$post45682, :variadic false, :file "src/openthink/views/post.cljs", :method-params ([data owner meta45683]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 21, :max-fixed-arity 3, :fn-var true, :arglists (quote ([data owner meta45683])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_openthink$views$post45671 {:num-fields 3, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name openthink.views.post/t_openthink$views$post45671, :file "src/openthink/views/post.cljs", :type true, :anonymous true, :column 3, :line 10, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_openthink$views$post45682 {:num-fields 3, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name openthink.views.post/t_openthink$views$post45682, :file "src/openthink/views/post.cljs", :type true, :anonymous true, :column 3, :line 21, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_openthink$views$post45663 {:num-fields 3, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name openthink.views.post/t_openthink$views$post45663, :file "src/openthink/views/post.cljs", :type true, :anonymous true, :column 3, :line 10, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}}, :require-macros {html sablono.core, sablono.core sablono.core}, :cljs.analyzer/constants {:seen #{meta45680 meta45683 meta45672 owner data :title meta45664 :body}, :order [:title :body data owner meta45664 meta45672 meta45680 meta45683]}, :doc nil}