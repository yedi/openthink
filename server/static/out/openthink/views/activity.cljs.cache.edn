{:rename-macros {}, :renames {}, :use-macros {html sablono.core, go cljs.core.async.macros, alt! cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name openthink.views.activity, :imports nil, :requires {ajax.core ajax.core, markdown.core markdown.core, openthink.state openthink.state, html sablono.core, cljs.core.async cljs.core.async, openthink.cursors openthink.cursors, sablono.core sablono.core, util openthink.utils, openthink.utils openthink.utils, om.core om.core, curs openthink.cursors, om om.core, openthink.views.editor openthink.views.editor, editor openthink.views.editor}, :uses {POST ajax.core, <! cljs.core.async, md->html markdown.core, chan cljs.core.async, update-app-state! openthink.state, >! cljs.core.async, GET ajax.core, put! cljs.core.async, take! cljs.core.async}, :defs {->t_openthink$views$activity45524 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([data owner meta45525])), :file nil}, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name openthink.views.activity/->t_openthink$views$activity45524, :variadic false, :file "src/openthink/views/activity.cljs", :method-params ([data owner meta45525]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 89, :max-fixed-arity 3, :fn-var true, :arglists (quote ([data owner meta45525])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_openthink$views$activity45391 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([rel owner meta45392])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name openthink.views.activity/->t_openthink$views$activity45391, :variadic false, :file "src/openthink/views/activity.cljs", :method-params ([rel owner meta45392]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 31, :max-fixed-arity 3, :fn-var true, :arglists (quote ([rel owner meta45392])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_openthink$views$activity45397 {:num-fields 3, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name openthink.views.activity/t_openthink$views$activity45397, :file "src/openthink/views/activity.cljs", :type true, :anonymous true, :column 3, :line 45, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_openthink$views$activity45588 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([data owner meta45589])), :file nil}, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name openthink.views.activity/->t_openthink$views$activity45588, :variadic false, :file "src/openthink/views/activity.cljs", :method-params ([data owner meta45589]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 89, :max-fixed-arity 3, :fn-var true, :arglists (quote ([data owner meta45589])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_openthink$views$activity45379 {:num-fields 3, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name openthink.views.activity/t_openthink$views$activity45379, :file "src/openthink/views/activity.cljs", :type true, :anonymous true, :column 3, :line 16, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_openthink$views$activity45588 {:num-fields 3, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name openthink.views.activity/t_openthink$views$activity45588, :file "src/openthink/views/activity.cljs", :type true, :anonymous true, :column 3, :line 89, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_openthink$views$activity45397 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([data owner meta45398])), :file nil}, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name openthink.views.activity/->t_openthink$views$activity45397, :variadic false, :file "src/openthink/views/activity.cljs", :method-params ([data owner meta45398]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 45, :max-fixed-arity 3, :fn-var true, :arglists (quote ([data owner meta45398])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_openthink$views$activity45391 {:num-fields 3, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name openthink.views.activity/t_openthink$views$activity45391, :file "src/openthink/views/activity.cljs", :type true, :anonymous true, :column 3, :line 31, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_openthink$views$activity45386 {:num-fields 3, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name openthink.views.activity/t_openthink$views$activity45386, :file "src/openthink/views/activity.cljs", :type true, :anonymous true, :column 3, :line 31, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, gen-pagination-numbers {:protocol-inline nil, :meta {:file "/Users/yedianyansi/Documents/workshop/openthink/client/src/openthink/views/activity.cljs", :line 81, :column 7, :end-line 81, :end-column 29, :arglists (quote ([action-count cur-page]))}, :name openthink.views.activity/gen-pagination-numbers, :variadic false, :file "src/openthink/views/activity.cljs", :end-column 29, :method-params ([action-count cur-page]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 2, :fn-var true, :arglists (quote ([action-count cur-page]))}, ->t_openthink$views$activity45372 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([comment owner meta45373])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name openthink.views.activity/->t_openthink$views$activity45372, :variadic false, :file "src/openthink/views/activity.cljs", :method-params ([comment owner meta45373]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 16, :max-fixed-arity 3, :fn-var true, :arglists (quote ([comment owner meta45373])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, link-action {:protocol-inline nil, :meta {:file "/Users/yedianyansi/Documents/workshop/openthink/client/src/openthink/views/activity.cljs", :line 30, :column 7, :end-line 30, :end-column 18, :arglists (quote ([rel owner]))}, :name openthink.views.activity/link-action, :variadic false, :file "src/openthink/views/activity.cljs", :end-column 18, :method-params ([rel owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 2, :fn-var true, :arglists (quote ([rel owner]))}, ->t_openthink$views$activity45455 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([data owner meta45456])), :file nil}, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name openthink.views.activity/->t_openthink$views$activity45455, :variadic false, :file "src/openthink/views/activity.cljs", :method-params ([data owner meta45456]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 45, :max-fixed-arity 3, :fn-var true, :arglists (quote ([data owner meta45456])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_openthink$views$activity45386 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([rel owner meta45387])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name openthink.views.activity/->t_openthink$views$activity45386, :variadic false, :file "src/openthink/views/activity.cljs", :method-params ([rel owner meta45387]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 31, :max-fixed-arity 3, :fn-var true, :arglists (quote ([rel owner meta45387])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_openthink$views$activity45455 {:num-fields 3, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name openthink.views.activity/t_openthink$views$activity45455, :file "src/openthink/views/activity.cljs", :type true, :anonymous true, :column 3, :line 45, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_openthink$views$activity45379 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([comment owner meta45380])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name openthink.views.activity/->t_openthink$views$activity45379, :variadic false, :file "src/openthink/views/activity.cljs", :method-params ([comment owner meta45380]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 16, :max-fixed-arity 3, :fn-var true, :arglists (quote ([comment owner meta45380])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_openthink$views$activity45372 {:num-fields 3, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name openthink.views.activity/t_openthink$views$activity45372, :file "src/openthink/views/activity.cljs", :type true, :anonymous true, :column 3, :line 16, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_openthink$views$activity45524 {:num-fields 3, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name openthink.views.activity/t_openthink$views$activity45524, :file "src/openthink/views/activity.cljs", :type true, :anonymous true, :column 3, :line 89, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, comment-action {:protocol-inline nil, :meta {:file "/Users/yedianyansi/Documents/workshop/openthink/client/src/openthink/views/activity.cljs", :line 15, :column 7, :end-line 15, :end-column 21, :arglists (quote ([comment owner]))}, :name openthink.views.activity/comment-action, :variadic false, :file "src/openthink/views/activity.cljs", :end-column 21, :method-params ([comment owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 2, :fn-var true, :arglists (quote ([comment owner]))}, ACTIONS-PER-PAGE {:name openthink.views.activity/ACTIONS-PER-PAGE, :file "src/openthink/views/activity.cljs", :line 13, :column 1, :end-line 13, :end-column 22, :meta {:file "/Users/yedianyansi/Documents/workshop/openthink/client/src/openthink/views/activity.cljs", :line 13, :column 6, :end-line 13, :end-column 22}}, comment-form {:protocol-inline nil, :meta {:file "/Users/yedianyansi/Documents/workshop/openthink/client/src/openthink/views/activity.cljs", :line 44, :column 7, :end-line 44, :end-column 19, :arglists (quote ([data owner]))}, :name openthink.views.activity/comment-form, :variadic false, :file "src/openthink/views/activity.cljs", :end-column 19, :method-params ([data owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data owner]))}, actions-view {:protocol-inline nil, :meta {:file "/Users/yedianyansi/Documents/workshop/openthink/client/src/openthink/views/activity.cljs", :line 88, :column 7, :end-line 88, :end-column 19, :arglists (quote ([data owner]))}, :name openthink.views.activity/actions-view, :variadic false, :file "src/openthink/views/activity.cljs", :end-column 19, :method-params ([data owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 88, :end-line 88, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data owner]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, html sablono.core, sablono.core sablono.core}, :cljs.analyzer/constants {:seen #{:page-chan owner meta45380 :ul :placeholder data :else meta45398 :linked_by :time_linked rel meta45456 meta45387 :li :response-format :username :params :action_count :recur :init-state :state :page meta45589 :time_posted meta45392 :actions :className :title :pages :div :h4 :total :transit :id meta45525 :url :error meta45373 :body comment :handler :user :on-change-fn :onClick :href :comment-chan :a :text :span}, :order [:id :user :username :time_posted :body comment owner meta45373 meta45380 :linked_by :a :href :url :title :time_linked rel meta45387 meta45392 :comment-chan :text :recur :response-format :params :handler :error :transit :else :state :init-state :placeholder :on-change-fn data meta45398 meta45456 :total :pages :page-chan :actions :span :h4 :page :action_count :ul :className :li :onClick :div meta45525 meta45589]}, :doc nil}