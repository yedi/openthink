{:rename-macros {}, :renames {}, :use-macros {html sablono.core}, :excludes #{}, :name openthink.views.header, :imports nil, :requires {om om.core, om.core om.core, html sablono.core, sablono.core sablono.core, auth openthink.views.auth, openthink.views.auth openthink.views.auth}, :uses nil, :defs {t_openthink$views$header45363 {:num-fields 3, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name openthink.views.header/t_openthink$views$header45363, :file "/Users/yedianyansi/Documents/workshop/openthink/client/src/openthink/views/header.cljs", :type true, :anonymous true, :column 3, :line 18, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, user-bar {:protocol-inline nil, :meta {:file "/Users/yedianyansi/Documents/workshop/openthink/client/src/openthink/views/header.cljs", :line 6, :column 7, :end-line 6, :end-column 15, :arglists (quote ([data owner]))}, :name openthink.views.header/user-bar, :variadic false, :file "/Users/yedianyansi/Documents/workshop/openthink/client/src/openthink/views/header.cljs", :end-column 15, :method-params ([data owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data owner]))}, ->t_openthink$views$header45356 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([data owner meta45357])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name openthink.views.header/->t_openthink$views$header45356, :variadic false, :file "/Users/yedianyansi/Documents/workshop/openthink/client/src/openthink/views/header.cljs", :method-params ([data owner meta45357]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 18, :max-fixed-arity 3, :fn-var true, :arglists (quote ([data owner meta45357])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_openthink$views$header45351 {:num-fields 3, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name openthink.views.header/t_openthink$views$header45351, :file "/Users/yedianyansi/Documents/workshop/openthink/client/src/openthink/views/header.cljs", :type true, :anonymous true, :column 3, :line 7, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_openthink$views$header45346 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([data owner meta45347])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name openthink.views.header/->t_openthink$views$header45346, :variadic false, :file "/Users/yedianyansi/Documents/workshop/openthink/client/src/openthink/views/header.cljs", :method-params ([data owner meta45347]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 7, :max-fixed-arity 3, :fn-var true, :arglists (quote ([data owner meta45347])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, header {:protocol-inline nil, :meta {:file "/Users/yedianyansi/Documents/workshop/openthink/client/src/openthink/views/header.cljs", :line 17, :column 7, :end-line 17, :end-column 13, :arglists (quote ([data owner]))}, :name openthink.views.header/header, :variadic false, :file "/Users/yedianyansi/Documents/workshop/openthink/client/src/openthink/views/header.cljs", :end-column 13, :method-params ([data owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data owner]))}, t_openthink$views$header45346 {:num-fields 3, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name openthink.views.header/t_openthink$views$header45346, :file "/Users/yedianyansi/Documents/workshop/openthink/client/src/openthink/views/header.cljs", :type true, :anonymous true, :column 3, :line 7, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_openthink$views$header45356 {:num-fields 3, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name openthink.views.header/t_openthink$views$header45356, :file "/Users/yedianyansi/Documents/workshop/openthink/client/src/openthink/views/header.cljs", :type true, :anonymous true, :column 3, :line 18, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_openthink$views$header45363 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([data owner meta45364])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name openthink.views.header/->t_openthink$views$header45363, :variadic false, :file "/Users/yedianyansi/Documents/workshop/openthink/client/src/openthink/views/header.cljs", :method-params ([data owner meta45364]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 18, :max-fixed-arity 3, :fn-var true, :arglists (quote ([data owner meta45364])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_openthink$views$header45351 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([data owner meta45352])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name openthink.views.header/->t_openthink$views$header45351, :variadic false, :file "/Users/yedianyansi/Documents/workshop/openthink/client/src/openthink/views/header.cljs", :method-params ([data owner meta45352]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 7, :max-fixed-arity 3, :fn-var true, :arglists (quote ([data owner meta45352])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}}, :require-macros {html sablono.core, sablono.core sablono.core}, :cljs.analyzer/constants {:seen #{owner data :username meta45364 :modal meta45357 :new-post meta45352 :reply-to :user meta45347}, :order [:user :username data owner meta45347 meta45352 :reply-to :modal :new-post meta45357 meta45364]}, :doc nil}