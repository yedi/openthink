{:rename-macros {}, :renames {}, :use-macros {sel1 dommy.macros, html sablono.core, go cljs.core.async.macros, alt! cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name openthink.core, :imports nil, :requires {openthink.state openthink.state, bidi.bidi bidi.bidi, html sablono.core, bidi bidi.bidi, openthink.views.modal openthink.views.modal, openthink.views.links openthink.views.links, cljs.core.async cljs.core.async, openthink.routes openthink.routes, openthink.views.header openthink.views.header, sablono.core sablono.core, openthink.views.post openthink.views.post, devtools devtools.core, modal openthink.views.modal, om.core om.core, om om.core, pushy pushy.core, devtools.core devtools.core, pushy.core pushy.core}, :uses {<! cljs.core.async, post-section openthink.views.post, dispatch! openthink.routes, chan cljs.core.async, routes openthink.routes, links-section openthink.views.links, header openthink.views.header, match-route bidi.bidi, >! cljs.core.async, app-state openthink.state, put! cljs.core.async, take! cljs.core.async}, :defs {body {:protocol-inline nil, :meta {:file "/Users/yedianyansi/Documents/workshop/openthink/client/src/openthink/core.cljs", :line 29, :column 7, :end-line 29, :end-column 11, :arglists (quote ([data owner]))}, :name openthink.core/body, :variadic false, :file "src/openthink/core.cljs", :end-column 11, :method-params ([data owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data owner]))}, ->t_openthink$core45859 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([data owner meta45860])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name openthink.core/->t_openthink$core45859, :variadic false, :file "src/openthink/core.cljs", :method-params ([data owner meta45860]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 30, :max-fixed-arity 3, :fn-var true, :arglists (quote ([data owner meta45860])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_openthink$core45865 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([data owner opts meta45866])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name openthink.core/->t_openthink$core45865, :variadic false, :file "src/openthink/core.cljs", :method-params ([data owner opts meta45866]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 40, :max-fixed-arity 4, :fn-var true, :arglists (quote ([data owner opts meta45866])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_openthink$core45862 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name openthink.core/t_openthink$core45862, :file "src/openthink/core.cljs", :type true, :anonymous true, :column 3, :line 40, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_openthink$core45862 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([data owner opts meta45863])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name openthink.core/->t_openthink$core45862, :variadic false, :file "src/openthink/core.cljs", :method-params ([data owner opts meta45863]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 40, :max-fixed-arity 4, :fn-var true, :arglists (quote ([data owner opts meta45863])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, start {:protocol-inline nil, :meta {:file "/Users/yedianyansi/Documents/workshop/openthink/client/src/openthink/core.cljs", :line 52, :column 7, :end-line 52, :end-column 12, :arglists (quote ([target state app]))}, :name openthink.core/start, :variadic false, :file "src/openthink/core.cljs", :end-column 12, :method-params ([target state app]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 3, :fn-var true, :arglists (quote ([target state app]))}, history {:name openthink.core/history, :file "src/openthink/core.cljs", :line 24, :column 1, :end-line 24, :end-column 13, :meta {:file "/Users/yedianyansi/Documents/workshop/openthink/client/src/openthink/core.cljs", :line 24, :column 6, :end-line 24, :end-column 13}}, t_openthink$core45859 {:num-fields 3, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name openthink.core/t_openthink$core45859, :file "src/openthink/core.cljs", :type true, :anonymous true, :column 3, :line 30, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_openthink$core45856 {:num-fields 3, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name openthink.core/t_openthink$core45856, :file "src/openthink/core.cljs", :type true, :anonymous true, :column 3, :line 30, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_openthink$core45865 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name openthink.core/t_openthink$core45865, :file "src/openthink/core.cljs", :type true, :anonymous true, :column 3, :line 40, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_openthink$core45856 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([data owner meta45857])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name openthink.core/->t_openthink$core45856, :variadic false, :file "src/openthink/core.cljs", :method-params ([data owner meta45857]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 30, :max-fixed-arity 3, :fn-var true, :arglists (quote ([data owner meta45857])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, app {:protocol-inline nil, :meta {:file "/Users/yedianyansi/Documents/workshop/openthink/client/src/openthink/core.cljs", :line 39, :column 7, :end-line 39, :end-column 10, :arglists (quote ([data owner opts]))}, :name openthink.core/app, :variadic false, :file "src/openthink/core.cljs", :end-column 10, :method-params ([data owner opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 3, :fn-var true, :arglists (quote ([data owner opts]))}}, :require-macros {dommy.macros dommy.macros, cljs.core.async.macros cljs.core.async.macros, html sablono.core, sablono.core sablono.core}, :cljs.analyzer/constants {:seen #{meta45857 :modal-view owner data meta45860 meta45863 :modal meta45866 :opts :target opts}, :order [data owner meta45857 meta45860 :modal :opts :modal-view opts meta45863 meta45866 :target]}, :doc nil}