{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name devtools.core, :imports nil, :requires {format devtools.format, devtools.format devtools.format, prefs devtools.prefs, devtools.prefs devtools.prefs}, :uses nil, :defs {enable! {:protocol-inline nil, :meta {:file "/Users/yedianyansi/Documents/workshop/openthink/client/../server/static/out/devtools/core.cljs", :line 98, :column 7, :end-line 98, :end-column 14, :arglists (quote ([]))}, :name devtools.core/enable!, :variadic false, :file "../server/static/out/devtools/core.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 98, :end-line 98, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, get-prefs {:protocol-inline nil, :meta {:file "/Users/yedianyansi/Documents/workshop/openthink/client/../server/static/out/devtools/core.cljs", :line 104, :column 7, :end-line 104, :end-column 16, :arglists (quote ([]))}, :name devtools.core/get-prefs, :variadic false, :file "../server/static/out/devtools/core.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 104, :end-line 104, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, ->CLJSDevtoolsFormatter {:protocol-inline nil, :meta {:file "/Users/yedianyansi/Documents/workshop/openthink/client/../server/static/out/devtools/core.cljs", :line 11, :column 10, :end-line 11, :end-column 31, :protocols #{}, :skip-protocol-flag nil, :factory :positional, :arglists (quote ([]))}, :protocols #{}, :name devtools.core/->CLJSDevtoolsFormatter, :variadic false, :file "../server/static/out/devtools/core.cljs", :end-column 31, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 11, :end-line 11, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :skip-protocol-flag nil}, monitor-api-call-if-avail {:protocol-inline nil, :meta {:file "/Users/yedianyansi/Documents/workshop/openthink/client/../server/static/out/devtools/core.cljs", :line 20, :column 7, :end-line 20, :end-column 32, :arglists (quote ([name api-call args]))}, :name devtools.core/monitor-api-call-if-avail, :variadic false, :file "../server/static/out/devtools/core.cljs", :end-column 32, :method-params ([name api-call args]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 3, :fn-var true, :arglists (quote ([name api-call args]))}, build-cljs-formatter {:protocol-inline nil, :meta {:file "/Users/yedianyansi/Documents/workshop/openthink/client/../server/static/out/devtools/core.cljs", :line 47, :column 8, :end-line 47, :end-column 28, :private true, :arglists (quote ([]))}, :private true, :name devtools.core/build-cljs-formatter, :variadic false, :file "../server/static/out/devtools/core.cljs", :end-column 28, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, is-ours? {:protocol-inline nil, :meta {:file "/Users/yedianyansi/Documents/workshop/openthink/client/../server/static/out/devtools/core.cljs", :line 61, :column 8, :end-line 61, :end-column 16, :private true, :arglists (quote ([o]))}, :private true, :name devtools.core/is-ours?, :variadic false, :file "../server/static/out/devtools/core.cljs", :end-column 16, :method-params ([o]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 1, :fn-var true, :arglists (quote ([o]))}, find-fn-in-debug-ns {:protocol-inline nil, :meta {:file "/Users/yedianyansi/Documents/workshop/openthink/client/../server/static/out/devtools/core.cljs", :line 14, :column 7, :end-line 14, :end-column 26, :arglists (quote ([fn-name]))}, :name devtools.core/find-fn-in-debug-ns, :variadic false, :file "../server/static/out/devtools/core.cljs", :end-column 26, :method-params ([fn-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([fn-name]))}, install! {:protocol-inline nil, :meta {:file "/Users/yedianyansi/Documents/workshop/openthink/client/../server/static/out/devtools/core.cljs", :line 84, :column 7, :end-line 84, :end-column 15, :arglists (quote ([]))}, :name devtools.core/install!, :variadic false, :file "../server/static/out/devtools/core.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 84, :end-line 84, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, *devtools-enabled* {:name devtools.core/*devtools-enabled*, :file "../server/static/out/devtools/core.cljs", :line 5, :column 1, :end-line 5, :end-column 34, :dynamic true, :meta {:file "/Users/yedianyansi/Documents/workshop/openthink/client/../server/static/out/devtools/core.cljs", :line 5, :column 16, :end-line 5, :end-column 34, :dynamic true}}, set-prefs! {:protocol-inline nil, :meta {:file "/Users/yedianyansi/Documents/workshop/openthink/client/../server/static/out/devtools/core.cljs", :line 101, :column 7, :end-line 101, :end-column 17, :arglists (quote ([new-prefs]))}, :name devtools.core/set-prefs!, :variadic false, :file "../server/static/out/devtools/core.cljs", :end-column 17, :method-params ([new-prefs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 101, :end-line 101, :max-fixed-arity 1, :fn-var true, :arglists (quote ([new-prefs]))}, monitor-api-calls {:protocol-inline nil, :meta {:file "/Users/yedianyansi/Documents/workshop/openthink/client/../server/static/out/devtools/core.cljs", :line 30, :column 8, :end-line 30, :end-column 25, :private true, :arglists (quote ([name api-call]))}, :private true, :name devtools.core/monitor-api-calls, :variadic false, :file "../server/static/out/devtools/core.cljs", :end-column 25, :method-params ([name api-call]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 2, :fn-var true, :arglists (quote ([name api-call]))}, sanitize {:protocol-inline nil, :meta {:file "/Users/yedianyansi/Documents/workshop/openthink/client/../server/static/out/devtools/core.cljs", :line 37, :column 8, :end-line 37, :end-column 16, :private true, :arglists (quote ([name api-call]))}, :private true, :name devtools.core/sanitize, :variadic false, :file "../server/static/out/devtools/core.cljs", :end-column 16, :method-params ([name api-call]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 2, :fn-var true, :arglists (quote ([name api-call]))}, install-our-formatter! {:protocol-inline nil, :meta {:file "/Users/yedianyansi/Documents/workshop/openthink/client/../server/static/out/devtools/core.cljs", :line 74, :column 8, :end-line 74, :end-column 30, :private true, :arglists (quote ([formatter]))}, :private true, :name devtools.core/install-our-formatter!, :variadic false, :file "../server/static/out/devtools/core.cljs", :end-column 30, :method-params ([formatter]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 74, :end-line 74, :max-fixed-arity 1, :fn-var true, :arglists (quote ([formatter]))}, get-formatters-safe {:protocol-inline nil, :meta {:file "/Users/yedianyansi/Documents/workshop/openthink/client/../server/static/out/devtools/core.cljs", :line 64, :column 8, :end-line 64, :end-column 27, :private true, :arglists (quote ([]))}, :private true, :name devtools.core/get-formatters-safe, :variadic false, :file "../server/static/out/devtools/core.cljs", :end-column 27, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, formatter-key {:name devtools.core/formatter-key, :file "../server/static/out/devtools/core.cljs", :line 9, :column 1, :end-line 9, :end-column 19, :meta {:file "/Users/yedianyansi/Documents/workshop/openthink/client/../server/static/out/devtools/core.cljs", :line 9, :column 6, :end-line 9, :end-column 19}}, *sanitizer-enabled* {:name devtools.core/*sanitizer-enabled*, :file "../server/static/out/devtools/core.cljs", :line 6, :column 1, :end-line 6, :end-column 35, :dynamic true, :meta {:file "/Users/yedianyansi/Documents/workshop/openthink/client/../server/static/out/devtools/core.cljs", :line 6, :column 16, :end-line 6, :end-column 35, :dynamic true}}, disable! {:protocol-inline nil, :meta {:file "/Users/yedianyansi/Documents/workshop/openthink/client/../server/static/out/devtools/core.cljs", :line 95, :column 7, :end-line 95, :end-column 15, :arglists (quote ([]))}, :name devtools.core/disable!, :variadic false, :file "../server/static/out/devtools/core.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 95, :end-line 95, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, log-exception-if-avail {:protocol-inline nil, :meta {:file "/Users/yedianyansi/Documents/workshop/openthink/client/../server/static/out/devtools/core.cljs", :line 25, :column 7, :end-line 25, :end-column 29, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name devtools.core/log-exception-if-avail, :variadic true, :file "../server/static/out/devtools/core.cljs", :end-column 29, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, installed? {:protocol-inline nil, :meta {:file "/Users/yedianyansi/Documents/workshop/openthink/client/../server/static/out/devtools/core.cljs", :line 70, :column 8, :end-line 70, :end-column 18, :private true, :arglists (quote ([]))}, :private true, :name devtools.core/installed?, :variadic false, :file "../server/static/out/devtools/core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 70, :end-line 70, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, uninstall-our-formatters! {:protocol-inline nil, :meta {:file "/Users/yedianyansi/Documents/workshop/openthink/client/../server/static/out/devtools/core.cljs", :line 79, :column 8, :end-line 79, :end-column 33, :private true, :arglists (quote ([]))}, :private true, :name devtools.core/uninstall-our-formatters!, :variadic false, :file "../server/static/out/devtools/core.cljs", :end-column 33, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 79, :end-line 79, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, uninstall! {:protocol-inline nil, :meta {:file "/Users/yedianyansi/Documents/workshop/openthink/client/../server/static/out/devtools/core.cljs", :line 89, :column 7, :end-line 89, :end-column 17, :arglists (quote ([]))}, :name devtools.core/uninstall!, :variadic false, :file "../server/static/out/devtools/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 89, :end-line 89, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, CLJSDevtoolsFormatter {:num-fields 0, :protocols #{}, :name devtools.core/CLJSDevtoolsFormatter, :file "../server/static/out/devtools/core.cljs", :end-column 31, :type true, :column 10, :line 11, :record false, :end-line 11, :skip-protocol-flag nil}, *monitor-enabled* {:name devtools.core/*monitor-enabled*, :file "../server/static/out/devtools/core.cljs", :line 7, :column 1, :end-line 7, :end-column 33, :dynamic true, :meta {:file "/Users/yedianyansi/Documents/workshop/openthink/client/../server/static/out/devtools/core.cljs", :line 7, :column 16, :end-line 7, :end-column 33, :dynamic true}}}, :require-macros nil, :doc nil}